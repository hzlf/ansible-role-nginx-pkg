---

- name: Nginx Configure | Install the nxensite and nxdissite scripts
  template:
    src: "{{item}}.j2"
    dest: "/usr/sbin/{{item}}"
    owner: root
    group: root
    mode: 0755
  with_items: ["nxensite", "nxdissite"]
  notify:
    - reload nginx


- name: Nginx Configure | Make sure the mime.types file is up to date
  template:
    src: mime.types
    dest: "{{nginx_dir}}/mime.types"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx


- name: Nginx Configure | Make sure the Nginx configuration is updated
  template:
    src: nginx.conf.j2
    dest: "{{nginx_dir}}/nginx.conf"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- include: "modules_configure.yml"

#sites

- name: Nginx Configure | Update the configurations for the sites inventory
  template:
    src: site.j2
    dest: "{{nginx_dir}}/sites-available/{{item.server.name}}"
  with_items: '{{nginx_sites}}'
  when: nginx_sites|lower != 'none'

# enable/disable sites
- name: Nginx Configure | Enable sites
  file:
    path:  "{{nginx_dir}}/sites-enabled/{{item.server.name}}"
    src:   "{{nginx_dir}}/sites-available/{{item.server.name}}"
    state: link
  with_items: '{{nginx_sites}}'
  when:       nginx_sites|lower != 'none' and nginx_enabled_sites|lower != 'none' and item.server.name == "{% for e in nginx_enabled_sites %}{% if item.server is defined and item.server.name is defined and e == item.server.name %}{{item.server.name}}{% endif %}{% endfor %}"
  notify:
    - reload nginx


- name: Nginx Configure | Ensure sites not enabled are disabled
  file:
    path:  "{{nginx_dir}}/sites-enabled/{{item.server.name}}"
    state: absent
  with_items: '{{nginx_sites}}'
  when:       nginx_sites|lower != 'none' and ( nginx_enabled_sites|lower == 'none' or item.server.name != "{% for e in nginx_enabled_sites %}{% if item.server is defined and item.server.name is defined and e == item.server.name %}{{item.server.name}}{% endif %}{% endfor %}" )
  notify:
    - reload nginx
